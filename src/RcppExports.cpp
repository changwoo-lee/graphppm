// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// runcppWilson
Rcpp::IntegerMatrix runcppWilson(int n, Rcpp::IntegerMatrix graph_edge_list, int rootvertex, Rcpp::IntegerVector ordering, int maxwalk);
RcppExport SEXP _graphppm_runcppWilson(SEXP nSEXP, SEXP graph_edge_listSEXP, SEXP rootvertexSEXP, SEXP orderingSEXP, SEXP maxwalkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type graph_edge_list(graph_edge_listSEXP);
    Rcpp::traits::input_parameter< int >::type rootvertex(rootvertexSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type ordering(orderingSEXP);
    Rcpp::traits::input_parameter< int >::type maxwalk(maxwalkSEXP);
    rcpp_result_gen = Rcpp::wrap(runcppWilson(n, graph_edge_list, rootvertex, ordering, maxwalk));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_graphppm_runcppWilson", (DL_FUNC) &_graphppm_runcppWilson, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_graphppm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
